// Do not edit this file; automatically generated by build.py.
'use strict';
var X9 = {};
X9.execute = function(code){
  try {
        eval(code);
      } catch (e) {
        // Null is thrown for infinite loop.
        // Otherwise, abnormal termination is a user error.
//        if (e !== Infinity) {
//          alert(e);
//        }
        X9.jsExcetion(e.name);
      }
     X9.completeJs();
}

X9.jsExcetion = function(id){
    x9Callback.jsExcetion(id);
}
X9.completeJs = function(){
    x9Callback.completeJs();
}

X9.takeoff = function(id){
    x9Callback.takeoff(id);
}

X9.takeoffOnHand = function(id){
    x9Callback.takeoffOnHand(id);
}


X9.landing= function(id){
    x9Callback.landing(id);
}

X9.hover = function(id){
    x9Callback.hover(id);
}

X9.isLowPower=function(){
    return x9Callback.isLowPower();
}


//摇杆值
X9.controlPitchRollCourseAcceleratorTime = function(id,arg1,arg2,arg3,arg4,arg5){
    x9Callback.controlPitchRollCourseAcceleratorTime(id,arg1,arg2,arg3,arg4,arg5);
}

X9.pitchDownFlipCount = function(id,value){
    x9Callback.pitchDownFlipCount(id,value);
}

X9.pitchUpFlipCount = function(id,value){
    x9Callback.pitchUpFlipCount(id,value);
}


//左
X9.rollDownFlipCount = function(id,value){
    x9Callback.rollDownFlipCount(id,value);
}

//右
X9.rollUpFlipCount = function(id,value){
    x9Callback.rollUpFlipCount(id,value);
}

X9.allowTakeoff = function(){
    return x9Callback.allowTakeoff();
}

X9.inFlight = function(){
    return x9Callback.inFlight();
}

X9.flipReady = function(){
    return x9Callback.flipReady();
}

X9.isHover = function(){
    return x9Callback.isHover();
}

X9.highlightBlock = function(id){
    x9Callback.highlightBlock(id);
}

X9.notlightBlock = function(id){
    x9Callback.notlightBlock(id);
}

X9.sleepInterval = function(id,value){
    x9Callback.sleepInterval(id,value);
}

X9.sleep = function(id,value){
    x9Callback.sleep(id,value);
}

X9.controlBeforeAndAfterValue= function(id,value){
    x9Callback.controlBeforeAndAfterValue(id,value)
}

X9.controlLeftAndRightValue= function(id,value){
    x9Callback.controlLeftAndRightValue(id,value)
}

X9.controlUpAndDownValue= function(id,value){
    x9Callback.controlUpAndDownValue(id,value)
}

X9.controlRotateValue= function(id,value){
    x9Callback.controlRotateValue(id,value)
}

X9.controlDrawCircleValue= function(id,value){
    x9Callback.controlDrawCircleValue(id,value)
}


